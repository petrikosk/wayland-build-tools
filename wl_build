#!/bin/bash
launch_path="$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" && pwd)"
. $HOME/.config/wayland-build-tools/wl_defines.sh
cp fix_pkg_conf_sysroot.sh $WLROOT
cp arm64.txt $WLROOT

if [ ! -e $WLROOT ]; then
	exit 1
fi

# Bail if errors
set -e

gen() {
	pkg=$1
	shift
	echo
	echo $pkg
	cd $WLROOT/$pkg
	echo "./autogen.sh $CONFIGURE_FLAGS --prefix=$WLD $*"
	./autogen.sh $CONFIGURE_FLAGS --prefix=$WLD $*
	#./autogen.sh $CONFIGURE_FLAGS $*
}

gen_autogen() {
	pkg=$1
	shift
	echo
	echo $pkg
	cd $WLROOT/$pkg
	echo "autoreconf --install"
	autoreconf --install
	echo "./configure $CONFIGURE_FLAGS --prefix=$WLD $*"
	./configure $CONFIGURE_FLAGS --prefix=$WLD $*

}
gen_meson() {
	pkg=$1
	shift
	echo
	echo $pkg
	cd $WLROOT/$pkg
	echo "meson setup --cross-file $MESON_CROSS_FILE --prefix=$WLD $* build"
	meson setup --cross-file $MESON_CROSS_FILE \
	-Dprefix=$WLD $* build
	#meson setup --cross-file $MESON_CROSS_FILE $* build
}

compile() {
	make -j16 && make install
	if [ $? != 0 ]; then
		echo "Build Error.  Terminating"
		exit
	fi
}

compile_meson() {
	ninja -C build/ install
	if [ $? != 0 ]; then
		echo "Build Error.  Terminating"
		exit
	fi
}

distcheck() {
	make distcheck
}

# TODO: Check if tree doesn't exist
# TODO: Log output
# TODO: If it's been a while since we last ran successfully, then
#       delete $WLD

mkdir -p $WLD/share/aclocal

#gen wayland --with-host-scanner --disable-documentation
#compile

#gen_meson wayland-protocols
#compile_meson

#gen_meson drm #--disable-libkms
#compile_meson

#gen proto
#compile

#gen macros
#compile

#gen xorgproto \
#	--enable-legacy

#compile

#gen libxau
#compile

#gen_meson drm
#compile_meson

#gen libxshmfence
#compile

#gen_meson libxkbcommon \
#    -Denable-x11=false \
#    -Dxkb-config-root=/usr/share/X11/xkb \
#    -Dx-locale-root=/usr/share/X11/locale
#compile_meson

gen libxext \
	--enable-malloc0returnsnull=no
compile

cd $WLROOT/mesa
git clean -xfd
gen_meson mesa
	--buildtype=release     \
	-Dplatforms=x11,wayland \
	-Dgallium-drivers=swrast  \
	-Dvulkan-drivers=""     \
	-Dvalgrind=disabled     \
	-Dlibunwind=disabled 
compile_meson


#gen pixman
#compile

#gen cairo --enable-xcb --enable-gl
#compile

#echo
#echo "libunwind"
#cd $WLROOT/libunwind
#autoreconf -i
#./configure $CONFIGURE_FLAGS --prefix=$WLD
#compile

#gen libevdev
#compile

#gen wayland-protocols
#compile

#gen libwacom # For wacom tablets.
#compile

#gen_autogen check
#compile

#cd $WLROOT/libinput
#rm -rf $WLROOT/libinput/builddir/
#mkdir $WLROOT/libinput/builddir/
#gen_meson libinput \
#	-Ddebug-gui=false

if [ ${INCLUDE_XWAYLAND} ]; then
	if [ ${WL_BITS} = 32 ]; then
		gen libxtrans
		compile
	fi

	

	#gen libxtrans
	#compile

	#gen libxdmcp # Generates -?-?-? into CFLAGS in makefile
	#compile

	#cd $WLROOT/libx11/src/util
	#patch < "${launch_path}/patches/libx11/src/util/makekeys.c.patch"
	#patch < "${launch_path}/patches/libx11/src/util/Makefile.am.patch"

	#gen libx11 \
	#	--enable-malloc0returnsnull=no \
	#	--disable-static \
	#	 --disable-dri2 \
	#	 --with-driver=dri \
	#	 --enable-malloc0returnsnull
	#compile 

	#gen libxkbfile
	#compile

	#gen libfontenc
	#compile

	#gen libXfont
	#compile

	# In xkbcomp: expr.c and geometry.c need #define _GNU_SOURCE on top of the file
	# Otherwise, build fails
	#gen xkbcomp
	#compile

	#gen util
	#compile

	gen_meson libepoxy \
		--buildtype=release
	compile_meson

	gen_meson xserver \
		-Dbuilder_addr="petri@koskinen.info" \
		-Dbuilder_string="PetriKoskinen" \
		-Dglx=false \
		-Dipv6=false \

	#gen xserver \
	#	--disable-docs --disable-devel-docs \
	#	--enable-xwayland --disable-xorg --disable-xvfb --disable-xnest \
	#	--disable-xquartz --disable-xwin
	compile_meson

	echo
	echo "Paths"
	mkdir -p $WLD/share/X11/xkb/rules
	if [ ! -e $WLD/share/X11/xkb/rules/evdev ]; then
		ln -s /usr/share/X11/xkb/rules/evdev $WLD/share/X11/xkb/rules/
	fi
	if [ ! -e $WLD/bin/xkbcomp ]; then
		ln -s /usr/bin/xkbcomp $WLD/bin/
	fi

	

	
fi

echo
echo "weston"
cd $WLROOT/weston
git clean -xfd
./autogen.sh $CONFIGURE_FLAGS \
	--prefix=$WLD \
	--with-cairo=image \
	--with-xserver-path=$WLD/bin/Xwayland \
	--enable-setuid-install=no \
	--enable-clients \
	--enable-headless-compositor \
	--enable-demo-clients-install
compile
#distcheck

# Set up config file if it isn't there already
if [ ! -e $HOME/.config/weston.ini ]; then
	cp weston.ini $HOME/.config/
fi

cd $WLROOT
